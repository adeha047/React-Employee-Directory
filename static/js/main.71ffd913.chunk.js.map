{"version":3,"sources":["components/Searchbar/searchbar.js","components/resultList.js","utils/API.js","components/EmployeeTable/table.js","components/Title/title.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","props","className","htmlFor","onChange","handleInputChange","value","getUsers","name","type","placeholder","id","style","margin","onClick","event","handleFormSubmit","ResultList","employees","map","employee","axios","get","EmployeeTable","console","log","window","debugprops","email","alt","src","picture","large","first","last","handleRemove","Title","children","App","searchUsers","API","then","result","setState","originalEmployees","data","results","error","target","preventDefault","searchValue","document","querySelector","filtered","state","filter","handleSort","key","key2","asc","employeeSorted","sort","a","b","search","this","marginRight","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.71ffd913.chunk.js","sourcesContent":["import React from 'react';\nimport \"./style.css\";\n\n\nfunction Searchbar(props) {\n  return (\n    <form> \n      <div className=\"form-group\">\n    \n        <label htmlFor=\"search\">Search:</label>\n        <input\n        //  key={props.employee.id.value}\n          onChange={props.handleInputChange}\n          value={props.getUsers}\n          name=\"search\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search an employee by name\"\n          id=\"search\"\n        />\n        <button style={{ margin: \"10px\" }}  onClick={(event) => props.handleFormSubmit(event)} className=\"btn btn-primary mt-3\"> \n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default Searchbar;\n","import React from 'react';\n\nfunction ResultList(props) {\n    return (\n      <ul className=\"list-group\">\n        {props.employees.map(employee => (\n          <li className=\"list-group-item\" key={employee.id.value}>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n  \n  export default ResultList;","import axios from \"axios\";\n\nexport default{ \n    getUsers:function(){    \n\n        return axios.get(\"https://randomuser.me/api/?results=20&nat=us,dk,fr,gb\");\n    }\n};","import React from 'react';\nimport './style.css';\n\n\nconst EmployeeTable = (props) => {\n  console.log(props.employees)\n  window.debugprops = props\n  return (\n    <ul>\n        {props.employees.map(employee => (\n          \n            <div key={employee.id.value} className=\"card\">\n              \n            <li className=\"list-group-item\" >\n            <strong>Email:</strong> {employee.email}\n              <div className=\"img-container\"></div>\n              <img alt={employee.name} className=\"img-fluid\" src={employee.picture.large} />\n            </li>\n            <li className=\"list-group-item\" >\n            <strong>Name:</strong> \n            {employee.name.first}\n            {employee.name.last}\n            </li>\n            <span className=\"remove\" onClick={() => props.handleRemove(employee.id.value)}>X</span>\n            </div>\n        ))}\n        </ul>\n  )\n}\nexport default EmployeeTable;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n    return<h1 className=\"jumbotron\">{props.children}</h1>\n}\n\n\nexport default Title;","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Searchbar from './components/Searchbar/searchbar.js';\nimport ResultList from \"./components/resultList.js\";\nimport API from './utils/API.js'\nimport EmployeeTable from './components/EmployeeTable/table.js';\nimport Title from './components/Title/title.js';\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      search: \"\",\n      employees: []\n    };\n  }\n\n  componentDidMount() {\n    this.searchUsers();\n\n  }\n\n  searchUsers = () => {\n    API.getUsers()\n      // .then(res => res.json())\n      .then(\n        (result) => {\n          // console.log(result.data.results)\n\n          this.setState({\n            originalEmployees: result.data.results,\n            employees: result.data.results\n          })\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          console.log(error);\n        }\n      )\n\n  }\n\n  handleInputChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const searchValue = document.querySelector(\"[name=search]\").value\n    let filtered = [...this.state.originalEmployees];\n    filtered = filtered.filter(employee => employee.name.first === searchValue)\n\n    // const employees = this.state.employees.filter(employee => employee.first === searchValue)\n\n    this.setState({\n      employees: filtered\n\n    })\n  };\n  //copy/process/setstate\n  handleRemove = id => {\n    console.log(id);\n    this.setState({\n      // console.log(this.state.employees)\n      employees: this.state.employees.filter(employee => employee.id.value !== id)\n    });\n  }\n\n  handleSort = (key, key2, asc) => {\n    // copy\n    let employeeSorted = [...this.state.employees];\n\n    // sort by key and asc\n    employeeSorted.sort((a, b) => {\n      return a[key][key2] > b[key][key2] ? asc * 1 : asc * -1;\n    });\n\n    // set the state\n    this.setState({ employees: employeeSorted });\n\n  }\n\n\n\n\n\n  render() {\n    \n    return (\n\n      <div>\n\n        <Title>Employee Directory</Title>\n        {/* {this.state.employees ? ( */}\n\n        {/* <button onClick={() => this.handleSort(\"name\", 1)}>Push for sort name</button>\n        <button onClick={() => this.handleSort(\"name\", -1)}>Push for sort name reverse</button> */}\n        <button type=\"button\" className=\"btn btn-primary\" style={{ marginRight: \"25px\" }} onClick={() => this.handleSort(\"name\", \"first\", 1)}>Sort by First Name</button>\n        <button type=\"button\" className=\"btn btn-primary\" style={{ marginRight: \"25px\" }} onClick={() => this.handleSort(\"name\", \"last\", 1)}>Sort by Last Name</button>\n\n        <div> <Searchbar\n          search={this.state.getUsers}\n          handleFormSubmit={this.handleFormSubmit}\n          handleInputChange={this.handleInputChange}\n\n        />\n          <EmployeeTable\n            employees={this.state.employees}\n            handleRemove={this.handleRemove}\n          />\n          <ResultList employees={this.state.employees} />\n        </div>\n\n      </div>\n\n    )\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}